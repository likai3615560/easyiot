server:
  port: 8040
  servlet:
    context-path: /auth

spring:
  application:
    name: server-auth
  redis:
    host: ${REDIS_HOST:127.0.0.1}
    port: ${REDIS_PORT:6379}
    timeout: 5000 #连接超时 毫秒
    jedis:
      pool:
        maxActive: 3
        maxIdle: 3
        minIdle: 1
        maxWait: -1 #连接池最大等行时间 -1没有限制
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3307/easyiot_oauth2?serverTimezone=GMT%2B8&useUnicode=true&amp&characterEncoding=utf-8
    username: root
    password: root
    druid:
      initialSize: 10
      minIdle: 10
      maxActive: 200
      minEvictableIdleTimeMillis: 180000
      testOnBorrow: false
      testWhileIdle: true
      removeAbandoned: true
      removeAbandonedTimeout: 1800
      logAbandoned: true
      poolPreparedStatements: true
      maxOpenPreparedStatements: 100
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

auth:
  tokenValiditySeconds: 1200  #token存储到redis的过期时间
  clientId: client
  clientSecret: secret
  cookieDomain: localhost
  cookieMaxAge: -1


encrypt:
  key-store:
    location: classpath:/easyiot.keystore
    secret: easyiot
    alias: easyiot
    password: easyiot

eureka:
  client:
    registerWithEureka: true #服务注册开关
    fetchRegistry: true #服务发现开关
    service-url:
      defaultZone: http://localhost:8761/eureka/
feign:
  client:
    config:
      feignName:
        connectTimeout: 5000
        readTimeout: 5000
  hystrix:
    enabled: true

ribbon:
  MaxAutoRetries: 2 #最大重试次数，当Eureka中可以找到服务，但是服务连不上时将会重试，如果eureka中找不到服务则直接走断路器
  MaxAutoRetriesNextServer: 3 #切换实例的重试次数
  OkToRetryOnAllOperations: false  #对所有操作请求都进行重试，如果是get则可以，如果是post，put等操作没有实现幂等的情况下是很危险的,所以设置为false
  ConnectTimeout: 5000  #请求连接的超时时间
  ReadTimeout: 6000 #请求处理的超时时间